//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace emulatorLauncher.Properties {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("emulatorLauncher.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] Bezel {
            get {
                object obj = ResourceManager.GetObject("Bezel", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 400/600XL/800 (48K) (OS B)
        ///800XL/1200XL/XEGS (64K)
        ///130XE (128K)
        ///Modern XL/XE (320K CS)
        ///Modern XL/XE (576K)
        ///Modern XL/XE (1088K)
        ///normal2x
        ///normal3x
        ///advmame2x
        ///advmame3x
        ///advinterp2x
        ///advinterp3x
        ///hq2x
        ///hq3x
        ///2xai
        ///super2xai
        ///supereagle
        ///tv2x
        ///tv3x
        ///rgb2x
        ///rgb3x
        ///scan2x
        ///scan3x
        ///JINC2
        ///xBR
        ///default
        ///asqrealc
        ///nintendo-vc
        ///rgb
        ///yuv-v3
        ///unsaturated-final
        ///sony-cxa2025as-us
        ///pal
        ///bmf-final2
        ///bmf-final3
        ///smooth-fbx
        ///composite-direct-fbx
        ///pvm-style-d93-fbx
        ///ntsc-hardware-fbx
        ///nes-classic-fbx-fs
        ///nescap
        ///wav [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string blacklisted_words {
            get {
                return ResourceManager.GetString("blacklisted_words", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] configgen_defaults {
            get {
                object obj = ResourceManager.GetObject("configgen_defaults", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ядро &apos;{0}&apos; не установлено.
        ///Установить сейчас ?.
        /// </summary>
        internal static string CoreNotInstalled {
            get {
                return ResourceManager.GetString("CoreNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Загружается {0}.
        /// </summary>
        internal static string Downloading {
            get {
                return ResourceManager.GetString("Downloading", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] eeprom {
            get {
                object obj = ResourceManager.GetObject("eeprom", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Эмулятор &apos;{0}&apos; не установлен.
        ///Установить сейчас ?.
        /// </summary>
        internal static string EmulatorNotInstalled {
            get {
                return ResourceManager.GetString("EmulatorNotInstalled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возникла ошибка :
        ///{0}.
        /// </summary>
        internal static string ErrorOccured {
            get {
                return ResourceManager.GetString("ErrorOccured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Внимание : Future Pinball требует включенного режима разработчика в настройках Windows.
        /// </summary>
        internal static string FPinballDeveloperMode {
            get {
                return ResourceManager.GetString("FPinballDeveloperMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] hidtodinput {
            get {
                object obj = ResourceManager.GetObject("hidtodinput", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Установка.....
        /// </summary>
        internal static string Installing {
            get {
                return ResourceManager.GetString("Installing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вы хотите сохранить игру в несжатом виде для дальнейшего использования ?.
        /// </summary>
        internal static string KeepUncompressedFile {
            get {
                return ResourceManager.GetString("KeepUncompressedFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Проверка обновлений....
        /// </summary>
        internal static string LookingForUpdates {
            get {
                return ResourceManager.GetString("LookingForUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на #
        ///# CORE CONFIGURATION OPTIONS
        ///#
        ///readconfig                1
        ///writeconfig               0
        ///
        ///#
        ///# CORE SEARCH PATH OPTIONS
        ///#
        ///homepath                  .
        ///rompath                   roms
        ///hashpath                  hash
        ///samplepath                samples
        ///artpath                   artwork
        ///ctrlrpath                 ctrlr
        ///inipath                   .;ini;ini/presets
        ///fontpath                  .
        ///cheatpath                 cheat
        ///crosshairpath             crosshair
        ///pluginspath               plugins
        ///languag [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string mame {
            get {
                return ResourceManager.GetString("mame", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] mamecrcs_xml_gz {
            get {
                object obj = ResourceManager.GetObject("mamecrcs_xml_gz", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Нет.
        /// </summary>
        internal static string No {
            get {
                return ResourceManager.GetString("No", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ОК.
        /// </summary>
        internal static string Ok {
            get {
                return ResourceManager.GetString("Ok", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] ReShade {
            get {
                object obj = ResourceManager.GetObject("ReShade", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на [D3D9]
        ///DepthCopyAtClearIndex=0
        ///DepthCopyBeforeClears=0
        ///DisableINTZ=0
        ///UseAspectRatioHeuristics=1
        ///
        ///[OPENGL]
        ///ForceMainDepthBuffer=0
        ///UseAspectRatioHeuristics=1
        ///
        ///[GENERAL]
        ///EffectSearchPaths=.\reshade-shaders\Shaders
        ///PerformanceMode=0
        ///PreprocessorDefinitions=
        ///PresetPath=.\ReShadePreset.ini
        ///PresetFiles=.\ReShadePreset.ini
        ///PresetTransitionDelay=1000
        ///SkipLoadingDisabledEffects=0
        ///TextureSearchPaths=.\reshade-shaders\Textures
        ///TutorialProgress=4
        ///
        ///[INPUT]
        ///ForceShortcutModifiers=1
        ///InputProcessing=2 [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ReShadeIni {
            get {
                return ResourceManager.GetString("ReShadeIni", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] reshader_x64_gz {
            get {
                object obj = ResourceManager.GetObject("reshader_x64_gz", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] reshader_x86_gz {
            get {
                object obj = ResourceManager.GetObject("reshader_x86_gz", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] ReShadeUI {
            get {
                object obj = ResourceManager.GetObject("ReShadeUI", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Drawing.Bitmap.
        /// </summary>
        internal static System.Drawing.Bitmap retrobat {
            get {
                object obj = ResourceManager.GetObject("retrobat", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Распаковка {0}.
        /// </summary>
        internal static string UnCompressing {
            get {
                return ResourceManager.GetString("UnCompressing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Доступно обновление для {0} :
        ///Новая версия : {1}
        ///Установленная версия : {2}
        ///Установить сейчас ?.
        /// </summary>
        internal static string UpdateAvailable {
            get {
                return ResourceManager.GetString("UpdateAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обновление {0}.
        /// </summary>
        internal static string Updating {
            get {
                return ResourceManager.GetString("Updating", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Поиск локализованного ресурса типа System.Byte[].
        /// </summary>
        internal static byte[] xbox_hdd_qcow2 {
            get {
                object obj = ResourceManager.GetObject("xbox_hdd_qcow2", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Да.
        /// </summary>
        internal static string Yes {
            get {
                return ResourceManager.GetString("Yes", resourceCulture);
            }
        }
    }
}
